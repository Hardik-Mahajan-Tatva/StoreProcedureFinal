@inject PizzaShop.Service.Interfaces.IPermissionService PermissionService
@{
   var context = HttpContextAccessor?.HttpContext;
   var user = context?.User;
   var userRole = user?.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value;

   var hasTableAndSectionPermissionAddEdit = false;
   var hasTableAndSectionPermissionDelete = false;
   if (!string.IsNullOrEmpty(userRole))
   {
      hasTableAndSectionPermissionAddEdit = await PermissionService.RoleHasPermissionAsync(userRole, "CanAddEdit", 4);
      hasTableAndSectionPermissionDelete = await PermissionService.RoleHasPermissionAsync(userRole, "CanDelete", 4);
   }
}


<div class="row">
   <div class="col-auto px-2 py-3 " style="border-right: 1px solid #0066a7; width: 280px;" id="tablePartial">
      <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="pills-home-tab">
         <div class="d-flex justify-content-between align-items-center px-3">
            <h4 class="custom-body-text-color text-bold">Sections</h4>

            @if (hasTableAndSectionPermissionAddEdit)
            {
               <button class="btn p-0" id="addsection">
                  <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="#0066a7" class="bi bi-plus-square"
                     viewBox="0 0 16 16">
                     <path
                        d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
                     <path
                        d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
                  </svg>
               </button>
            }
            <button type="button" class="btn-close  d-block d-xl-none" aria-label="Close" id="closeBtn"></button>
         </div>
         <div class="overflow-auto mt-3 table-section-wrapper ">
            <ul class="list-unstyled" id="sectionList">
               @{
                  bool isFirstSection = true;
               }
               @foreach (var sec in Model.Sections)
               {
                  string activeClass = isFirstSection ? "active-section" : "";
                  isFirstSection = false;
                  <li class="d-flex p-1 ms-1 align-items-center justify-content-between section-btn btn "
                     data-id="@sec.SectionId" id="section-@sec.SectionId">
                     <div class="d-flex align-items-center flex-wrap  m-0 gap-2 ms-2">
                        <div class="sort-handle"><i class="fas fa-grip-vertical"></i></div>
                        <div class="text-truncate" style="max-width: 150px;">@sec.SectionName</div>
                     </div>
                     <div class="d-flex">
                        @if (hasTableAndSectionPermissionAddEdit)
                        {
                           <button class="edit-section-btn btn p-0 m-1" data-id="@sec.SectionId" data-bs-toggle="modal"
                              data-bs-target="#editSection">
                              <img class="hover-img" src="~/images/icons/pen.svg" alt="edit-icon" />
                           </button>
                        }
                        @if (hasTableAndSectionPermissionDelete)
                        {
                           <button class="delete-section-btn btn p-0 m-1" data-id="@sec.SectionId" data-bs-toggle="modal"
                              data-bs-target="#deleteSection">
                              <img class="hover-img" src="~/images/icons/trash.svg" alt="delete-icon" />
                           </button>
                        }
                     </div>
                  </li>
               }
            </ul>
         </div>
      </div>
   </div>

   <div class="col bg-white py-xl-3 py-3 table-responsive">
      <div class="d-flex justify-content-between w-100 mb-3 d-sm-row d-column flex-wrap">
         <div class="d-flex flex-wrap gap-1">
            <div class="d-block d-xl-none">
               <img src="/images/list.svg" alt="" width="30px" id="tableToggler">
            </div>
            <h4 class="custom-body-text-color">Table</h4>
         </div>
         <div class="d-flex align-items-center gap-2 d-sm-row d-column flex-wrap flex-sm-nowrap">
            <div class="d-flex align-items-center border rounded px-2 bg-white"
               style="gap: 5px; width: 220px; height: 38px;">
               <input class="form-control border-0 shadow-none p-0" type="text" placeholder="Search" id="tableSearch"
                  style="width: 100%; font-size: 14px; height: 100%;">
               <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" class="bi bi-search" viewBox="0 0 16 16">
                  <path
                     d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
               </svg>
            </div>
            @if (hasTableAndSectionPermissionDelete)
            {
               <button class="btn bg-white border-secondary p-0" style="height: 38px; width: 38px;"
                  id="massDeleteBtnTable">
                  <img class="delete-icon" src="~/images/icons/trash.svg" alt="delete-icon" />
               </button>
            }
            @if (hasTableAndSectionPermissionAddEdit)
            {
               <button class="btn custom-navbar-bg-color text-white d-flex align-items-center add-table-btn"
                  style="height: 38px; padding: 6px 12px;">

                  + New Table
               </button>
            }
         </div>
      </div>
      <div class="table-responsive" id="tablesContainer">
      </div>
   </div>
</div>
<script>
   document.getElementById("tableToggler").addEventListener("click", function () {
      var tablePanel = document.getElementById("tablePartial");
      tablePanel.classList.toggle("show");
   });

   document.getElementById("closeBtn").addEventListener("click", function () {
      var tablePanel = document.getElementById("tablePartial");
      tablePanel.classList.remove("show");
   });

   function initializeTableSortable() {
      $("#sectionList").sortable({
         handle: '.sort-handle',
         update: function (event, ui) {
            var sortedIDs = $(this).sortable('toArray').map(function (id) {
               return id.split('-')[1];
            });


            $.ajax({
               url: '@Url.Action("UpdateSectionOrder", "TableAndSection")',
               type: 'POST',
               contentType: 'application/json',
               data: JSON.stringify(sortedIDs),
               success: function (response) {
                  toastr.success("Section order updated!");
               },
               error: function (xhr) {
                  toastr.error("Failed to update section order.");
                  toastr.error("An error occurred: " + xhr.responseText, "Error");

               }
            });
         }
      });
   }
   $(document).ready(function () {
      initializeTableSortable();
   });
</script>