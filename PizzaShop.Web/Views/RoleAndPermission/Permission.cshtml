@model pizzashop.Repository.ViewModels.RoleNPermission;
@inject PizzaShop.Service.Interfaces.IPermissionService PermissionService
@{
    Layout = "_Layout";
    ViewData["Title"] = "Permissions";

    var context = HttpContextAccessor?.HttpContext;
    var user = context?.User;
    var userRole = user?.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value;

    var hasRolesPermissionAddEdit = false;
    var hasRolesPermissionDelete = false;

    if (!string.IsNullOrEmpty(userRole))
    {
        hasRolesPermissionAddEdit = await PermissionService.RoleHasPermissionAsync(userRole, "CanAddEdit", 2);
        hasRolesPermissionDelete = await PermissionService.RoleHasPermissionAsync(userRole, "CanDelete", 2);
    }
}

@section Styles {
    <link rel="stylesheet" href="~/css/permission.css" />
}
<div class="d-flex flex-column w-100 p-4  permissions-table-wrapper ">
    <div class="d-flex justify-content-between w-100 mb-3 d-sm-row d-column flex-wrap flex-sm-nowrap ">
        <h1 class="custom-body-text-color">Permissions</h1>
        <div class="d-flex align-items-center gap-2 d-sm-row d-column  flex-wrap flex-sm-nowrap">
            <a asp-controller="RoleAndPermission" asp-action="RoleAndPermission" class="btn btn-outline-primary">
                Back
            </a>
        </div>
    </div>
    <div class="bg-white d-flex flex-column p-4 ">
        <div class="form-floating  col-6  col-sm-4 custom-focus mb-2">
            <input type="text" class="form-control" name="roleTitle" id="roleTitle" placeholder="" value="@Model.Rolename" readonly>
            <label for="roleTitle" style="background: none;">Role</label>
        </div>
        <form asp-controller="RoleAndPermission" asp-action="UpdatePermission" method="post">
            <input type="hidden" asp-for="Roleid">
            <div class="  permissions-wrapper ">
                <table class="table  p-2  table-responsive">
                    <tr class="tableheader">
                        <th>
                            <input class="form-check-input master-checkbox" type="checkbox" id="permissions-checkbox">
                            Permissions
                        </th>
                        <th>Can View</th>
                        <th>Can Add/Edit</th>
                        <th>Can Delete</th>

                    </tr>
                    <tbody class="table-group-divider">
                        @for (int i = 0; i < Model.Permissions?.Count; i++)
                        {
                            <tr>
                                <td>
                                    <div class="form-check">
                                        <input type="hidden" asp-for="@Model.Permissions[i].Permissionid">
                                        <input class="form-check-input module-checkbox" type="checkbox" value=""
                                            id="@Model.Permissions[i].Permissionid">
                                        <label class="form-check-label" for="@Model.Permissions[i].Permissionid">
                                            @Model.Permissions[i].Modulename
                                        </label>
                                    </div>
                                </td>
                                <td>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input can-view" type="checkbox" role="switch"
                                            style="cursor: pointer; width: 60px; height: 30px;  opacity: 1;"
                                            asp-for="@Model.Permissions[i].Canview" />
                                    </div>
                                </td>
                                <td>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input can-add-edit" type="checkbox" role="switch"
                                            style="cursor: pointer; width: 60px; height: 30px;  opacity: 1;"
                                            asp-for="@Model.Permissions[i].Canaddedit" />
                                    </div>
                                </td>
                                <td>
                                    <div class="form-check form-switch">
                                        <input class="form-check-input can-delete" type="checkbox" role="switch"
                                            style="cursor: pointer; width: 60px; height: 30px;  opacity: 1;"
                                            asp-for="@Model.Permissions[i].Candelete" />
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @if ((userRole == "Admin" && @Model.Rolename == "Admin")
                        || (userRole == "Admin" && @Model.Rolename == "Manager")
                        || (userRole == "Admin" && @Model.Rolename == "Chef")
                        || (userRole == "Manager" && @Model.Rolename == "Manager")
                        || (userRole == "Manager" && @Model.Rolename == "Chef")
                        )
            {
                <div class="d-flex justify-content-end gap-2 mt-3 ">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a asp-controller="RoleAndPermission" asp-action="RoleAndPermission"
                        class="btn btn-outline-primary">Cancel</a>
                </div>
            }
        </form>
    </div>
    <input type="hidden" id="currentUserRole" value="@userRole" />
    <input type="hidden" id="targetRole" value="@Model.Rolename" />

</div>

<script>
    window.TempData = {
        ErrorMessage: '@TempData["ErrorMessage"]',
        SuccessMessage: '@TempData["SuccessMessage"]',
        WarningMessage: '@TempData["WarningMessage"]',
        InfoMessage: '@TempData["InfoMessage"]'
    };
</script>
@section Scripts {
    <script src="~/js/permissions.js"></script>
}